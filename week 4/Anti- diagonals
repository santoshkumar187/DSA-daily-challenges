ðŸ§  What Are Anti-Diagonals?
In a square matrix, an anti-diagonal is a set of elements where the sum of row and column indices (i + j) is the same.

Example Matrix:
Code
A = [
 [1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]
]
Anti-Diagonals:
i + j = 0 â†’ [1]

i + j = 1 â†’ [2, 4]

i + j = 2 â†’ [3, 5, 7]

i + j = 3 â†’ [6, 8]

i + j = 4 â†’ [9]

So the output is:

Code
[
 [1],
 [2, 4],
 [3, 5, 7],
 [6, 8],
 [9]
]



*** implementations
/*
Given a square matrix A (N x N), return all of its anti-diagonals.

ðŸ‘‰ Anti-diagonal means all elements having the same (i + j) index sum.

Input: 
A = [
 [1, 2, 3],
 [4, 5, 6],
 [7, 8, 9]
]

Output:
[
 [1],
 [2, 4],
 [3, 5, 7],
 [6, 8],
 [9]
]



*/


/*
function antiDiagonals(matrix, n):
    result = list of lists of size (2*n - 1)

    for i from 0 to n-1:
        for j from 0 to n-1:
            sum = i + j
            result[sum].append(matrix[i][j])

    return result



*/



import java.util.*;

class Solution {
    public ArrayList<ArrayList<Integer>> antiDiagonals(int[][] A) {
        int n = A.length;
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();

        // Initialize result
        for (int i = 0; i < 2 * n - 1; i++) {
            result.add(new ArrayList<>());
        }

        // Fill anti-diagonals
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                result.get(i + j).add(A[i][j]);
            }
        }
        return result;
    }
}


OR

// Import utility classes for ArrayList and Scanner
import java.util.*;

public class Main {

    // Function to compute anti-diagonals of a square matrix
    public static ArrayList<ArrayList<Integer>> antiDiagonals(int[][] A) {
        int n = A.length; // Size of the matrix (n x n)
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();

        // Initialize result with (2n - 1) empty lists for each possible i + j sum
        for (int i = 0; i < 2 * n - 1; i++) {
            result.add(new ArrayList<>());
        }

        // Traverse the matrix and group elements by their i + j index sum
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                result.get(i + j).add(A[i][j]); // Add element to corresponding anti-diagonal
            }
        }

        return result; // Return the list of anti-diagonals
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in); // Scanner for user input

        // Prompt user for matrix size
        System.out.print("Enter matrix size (n x n): ");
        int n = sc.nextInt();

        // Declare and initialize the matrix
        int[][] matrix = new int[n][n];
        System.out.println("Enter matrix elements row-wise:");

        // Read matrix elements from user
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = sc.nextInt();
            }
        }

        // Call antiDiagonals function to compute result
        ArrayList<ArrayList<Integer>> result = antiDiagonals(matrix);

        // Print the anti-diagonals
        System.out.println("Anti-diagonals:");
        for (ArrayList<Integer> row : result) {
            for (int val : row) {
                System.out.print(val + " ");
            }
            System.out.println(); // New line after each anti-diagonal
        }

        sc.close(); // Close the scanner
    }
}



Enter matrix size (n x n): 3
Enter matrix elements row-wise:
1 2 3 4
1 2 3 4
1 2 3 4
Anti-diagonals:
1 
2 4 
3 1 3 
2 4 
1 

=== Code Execution Successful ===
